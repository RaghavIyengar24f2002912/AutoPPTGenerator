Project Overview & Methodology
This web application transforms unstructured text into a fully formatted PowerPoint presentation that inherits the visual style of a user-provided template. The process is divided into two core stages: intelligent content structuring and dynamic style application.

How Text is Parsed and Mapped to Slides
The application leverages a Large Language Model (LLM) to intelligently parse and structure the user's raw text input. When a user submits their content, it is sent to their chosen LLM provider (e.g., OpenAI, Anthropic, Gemini) along with a carefully engineered prompt. This prompt instructs the model to act as a presentation expert and reformat the text into a structured JSON array. Each object in this array represents a single slide and contains two key-value pairs: a title for the slide's heading and content as an array of strings for the bullet points. This method allows the application to dynamically determine a reasonable number of slides based on the input's length and substance, fulfilling the requirement for intelligent content mapping.

How Visual Style is Applied
To ensure the output matches the user's desired look and feel, the application directly utilizes the uploaded .pptx or .potx file as a blueprint. Using the python-pptx library, the app loads this file and gains access to its master slides and, most importantly, its predefined slide layouts (e.g., "Title Slide," "Title and Content"). As the application iterates through the JSON structure provided by the LLM, it adds new slides to the presentation using these existing layouts. By populating the predefined placeholders within these layouts, the new slides automatically inherit all the design elements of the template—including its color scheme, font choices, logos, and background images—without needing to analyze them individually. This ensures a seamless and visually consistent final product.
